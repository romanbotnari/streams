version: '3.1'
services:
  kafka-app:
    build: kafka/
    ports:
      - "2181:2181"
      - "9092:9092"
      - "7071:7071"
    hostname: kafka
    container_name: kafka
    environment:
      - "ADVERTISED_HOST=kafka"
      - "ADVERTISED_PORT=9092"
      - "AUTO_CREATE_TOPICS=true"
      - "EXTRA_ARGS=-javaagent:/usr/app/jmx_prometheus_javaagent.jar=7071:/usr/app/prom-jmx-agent-config.yml"
    command: >
      bash -c
      "(sleep 15s &&
      /opt/kafka_2.11-0.10.1.0/bin/kafka-topics.sh
      --create
      --zookeeper
      localhost:2181 --replication-factor 1 --partitions 1
      --topic my-kafka-topic &) && (supervisord -n)"
    networks:
      - app-network
  producer:
    build: producer/
    ports:
      - "8080:8080"
    hostname: localhost
    container_name: producer
    networks:
      - app-network
  consumer:
    build: consumer/
    hostname: localhost
    container_name: consumer
    ports:
      - "8181:8181"
    networks:
      - app-network
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - app-network
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - ./monitoring/grafana/dashboard-provisioning.yml:/etc/grafana/provisioning/dashboards/all.yml
      - ./monitoring/grafana/datasources.yml:/etc/grafana/provisioning/datasources/all.yml
      - ./monitoring/grafana/config.ini:/etc/grafana/config.ini
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - app-network
networks:
  app-network:
    driver: bridge